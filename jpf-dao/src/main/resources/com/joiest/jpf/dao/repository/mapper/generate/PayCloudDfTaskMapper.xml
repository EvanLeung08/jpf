<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.joiest.jpf.dao.repository.mapper.generate.PayCloudDfTaskMapper">
  <resultMap id="BaseResultMap" type="com.joiest.jpf.common.po.PayCloudDfTask">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="batchid" jdbcType="VARCHAR" property="batchid" />
    <result column="request_batchno" jdbcType="VARCHAR" property="requestBatchno" />
    <result column="request_df_id" jdbcType="VARCHAR" property="requestDfId" />
    <result column="request_str" jdbcType="VARCHAR" property="requestStr" />
    <result column="order_count" jdbcType="INTEGER" property="orderCount" />
    <result column="order_money" jdbcType="DECIMAL" property="orderMoney" />
    <result column="already_count" jdbcType="INTEGER" property="alreadyCount" />
    <result column="already_money" jdbcType="DECIMAL" property="alreadyMoney" />
    <result column="fail_count" jdbcType="INTEGER" property="failCount" />
    <result column="fail_money" jdbcType="DECIMAL" property="failMoney" />
    <result column="insert_status" jdbcType="TINYINT" property="insertStatus" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="created" jdbcType="TIMESTAMP" property="created" />
    <result column="updated" jdbcType="TIMESTAMP" property="updated" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    id, batchid, request_batchno, request_df_id, request_str, order_count, order_money, 
    already_count, already_money, fail_count, fail_money, insert_status, status, created, 
    updated
  </sql>
  <select id="selectByExample" parameterType="com.joiest.jpf.common.po.PayCloudDfTaskExample" resultMap="BaseResultMap">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from pay_cloud_df_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="pageNo &gt; 0 and pageSize &gt; 0">
      limit ${(pageNo-1) * pageSize}, ${pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    select 
    <include refid="Base_Column_List" />
    from pay_cloud_df_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    delete from pay_cloud_df_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.joiest.jpf.common.po.PayCloudDfTaskExample">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    delete from pay_cloud_df_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.joiest.jpf.common.po.PayCloudDfTask">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    insert into pay_cloud_df_task (id, batchid, request_batchno, 
      request_df_id, request_str, order_count, 
      order_money, already_count, already_money, 
      fail_count, fail_money, insert_status, 
      status, created, updated
      )
    values (#{id,jdbcType=BIGINT}, #{batchid,jdbcType=VARCHAR}, #{requestBatchno,jdbcType=VARCHAR}, 
      #{requestDfId,jdbcType=VARCHAR}, #{requestStr,jdbcType=VARCHAR}, #{orderCount,jdbcType=INTEGER}, 
      #{orderMoney,jdbcType=DECIMAL}, #{alreadyCount,jdbcType=INTEGER}, #{alreadyMoney,jdbcType=DECIMAL}, 
      #{failCount,jdbcType=INTEGER}, #{failMoney,jdbcType=DECIMAL}, #{insertStatus,jdbcType=TINYINT}, 
      #{status,jdbcType=TINYINT}, #{created,jdbcType=TIMESTAMP}, #{updated,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.joiest.jpf.common.po.PayCloudDfTask">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    insert into pay_cloud_df_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="batchid != null">
        batchid,
      </if>
      <if test="requestBatchno != null">
        request_batchno,
      </if>
      <if test="requestDfId != null">
        request_df_id,
      </if>
      <if test="requestStr != null">
        request_str,
      </if>
      <if test="orderCount != null">
        order_count,
      </if>
      <if test="orderMoney != null">
        order_money,
      </if>
      <if test="alreadyCount != null">
        already_count,
      </if>
      <if test="alreadyMoney != null">
        already_money,
      </if>
      <if test="failCount != null">
        fail_count,
      </if>
      <if test="failMoney != null">
        fail_money,
      </if>
      <if test="insertStatus != null">
        insert_status,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="created != null">
        created,
      </if>
      <if test="updated != null">
        updated,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="batchid != null">
        #{batchid,jdbcType=VARCHAR},
      </if>
      <if test="requestBatchno != null">
        #{requestBatchno,jdbcType=VARCHAR},
      </if>
      <if test="requestDfId != null">
        #{requestDfId,jdbcType=VARCHAR},
      </if>
      <if test="requestStr != null">
        #{requestStr,jdbcType=VARCHAR},
      </if>
      <if test="orderCount != null">
        #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="alreadyCount != null">
        #{alreadyCount,jdbcType=INTEGER},
      </if>
      <if test="alreadyMoney != null">
        #{alreadyMoney,jdbcType=DECIMAL},
      </if>
      <if test="failCount != null">
        #{failCount,jdbcType=INTEGER},
      </if>
      <if test="failMoney != null">
        #{failMoney,jdbcType=DECIMAL},
      </if>
      <if test="insertStatus != null">
        #{insertStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        #{updated,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.joiest.jpf.common.po.PayCloudDfTaskExample" resultType="java.lang.Integer">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    select count(*) from pay_cloud_df_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    update pay_cloud_df_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.batchid != null">
        batchid = #{record.batchid,jdbcType=VARCHAR},
      </if>
      <if test="record.requestBatchno != null">
        request_batchno = #{record.requestBatchno,jdbcType=VARCHAR},
      </if>
      <if test="record.requestDfId != null">
        request_df_id = #{record.requestDfId,jdbcType=VARCHAR},
      </if>
      <if test="record.requestStr != null">
        request_str = #{record.requestStr,jdbcType=VARCHAR},
      </if>
      <if test="record.orderCount != null">
        order_count = #{record.orderCount,jdbcType=INTEGER},
      </if>
      <if test="record.orderMoney != null">
        order_money = #{record.orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.alreadyCount != null">
        already_count = #{record.alreadyCount,jdbcType=INTEGER},
      </if>
      <if test="record.alreadyMoney != null">
        already_money = #{record.alreadyMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.failCount != null">
        fail_count = #{record.failCount,jdbcType=INTEGER},
      </if>
      <if test="record.failMoney != null">
        fail_money = #{record.failMoney,jdbcType=DECIMAL},
      </if>
      <if test="record.insertStatus != null">
        insert_status = #{record.insertStatus,jdbcType=TINYINT},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.created != null">
        created = #{record.created,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updated != null">
        updated = #{record.updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    update pay_cloud_df_task
    set id = #{record.id,jdbcType=BIGINT},
      batchid = #{record.batchid,jdbcType=VARCHAR},
      request_batchno = #{record.requestBatchno,jdbcType=VARCHAR},
      request_df_id = #{record.requestDfId,jdbcType=VARCHAR},
      request_str = #{record.requestStr,jdbcType=VARCHAR},
      order_count = #{record.orderCount,jdbcType=INTEGER},
      order_money = #{record.orderMoney,jdbcType=DECIMAL},
      already_count = #{record.alreadyCount,jdbcType=INTEGER},
      already_money = #{record.alreadyMoney,jdbcType=DECIMAL},
      fail_count = #{record.failCount,jdbcType=INTEGER},
      fail_money = #{record.failMoney,jdbcType=DECIMAL},
      insert_status = #{record.insertStatus,jdbcType=TINYINT},
      status = #{record.status,jdbcType=TINYINT},
      created = #{record.created,jdbcType=TIMESTAMP},
      updated = #{record.updated,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.joiest.jpf.common.po.PayCloudDfTask">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    update pay_cloud_df_task
    <set>
      <if test="batchid != null">
        batchid = #{batchid,jdbcType=VARCHAR},
      </if>
      <if test="requestBatchno != null">
        request_batchno = #{requestBatchno,jdbcType=VARCHAR},
      </if>
      <if test="requestDfId != null">
        request_df_id = #{requestDfId,jdbcType=VARCHAR},
      </if>
      <if test="requestStr != null">
        request_str = #{requestStr,jdbcType=VARCHAR},
      </if>
      <if test="orderCount != null">
        order_count = #{orderCount,jdbcType=INTEGER},
      </if>
      <if test="orderMoney != null">
        order_money = #{orderMoney,jdbcType=DECIMAL},
      </if>
      <if test="alreadyCount != null">
        already_count = #{alreadyCount,jdbcType=INTEGER},
      </if>
      <if test="alreadyMoney != null">
        already_money = #{alreadyMoney,jdbcType=DECIMAL},
      </if>
      <if test="failCount != null">
        fail_count = #{failCount,jdbcType=INTEGER},
      </if>
      <if test="failMoney != null">
        fail_money = #{failMoney,jdbcType=DECIMAL},
      </if>
      <if test="insertStatus != null">
        insert_status = #{insertStatus,jdbcType=TINYINT},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="created != null">
        created = #{created,jdbcType=TIMESTAMP},
      </if>
      <if test="updated != null">
        updated = #{updated,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.joiest.jpf.common.po.PayCloudDfTask">
    <!--
      @mbggenerated
      This element is automatically generated by MyBatis Generator,Do not modify ! Generated on Tue Jul 17 15:28:48 CST 2018.
    -->
    update pay_cloud_df_task
    set batchid = #{batchid,jdbcType=VARCHAR},
      request_batchno = #{requestBatchno,jdbcType=VARCHAR},
      request_df_id = #{requestDfId,jdbcType=VARCHAR},
      request_str = #{requestStr,jdbcType=VARCHAR},
      order_count = #{orderCount,jdbcType=INTEGER},
      order_money = #{orderMoney,jdbcType=DECIMAL},
      already_count = #{alreadyCount,jdbcType=INTEGER},
      already_money = #{alreadyMoney,jdbcType=DECIMAL},
      fail_count = #{failCount,jdbcType=INTEGER},
      fail_money = #{failMoney,jdbcType=DECIMAL},
      insert_status = #{insertStatus,jdbcType=TINYINT},
      status = #{status,jdbcType=TINYINT},
      created = #{created,jdbcType=TIMESTAMP},
      updated = #{updated,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>